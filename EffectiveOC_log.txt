************************
2015年9月9日09:39:50 
************************

1、Message structure(消息机制)原理是什么，和Function calling(函数调用)有什么区别？为什么要使用消息机制？
   
   可参考http://my.oschina.net/amoyai/blog/92191，其实是官方文档Messaging的翻译。主要讲解了消息机制的原理。其实最后是通过调用objc_msgSend这个C方法来实现的，有两个参数receiver，selector，第一个参数是消息接收对象，即要调用哪个对象的方法，selector是方法编号，指向具体的函数。

   消息机制实现了动态绑定方法，由于在编译时无法确定方法是否真的存在，所以在运行时很可能会出现找不到方法的情况，此时OC Runtime采用了消息转机制，即Message Forwarding。转发规则如下：
而且执行完消息后，会把消息名和方法地址缓存起来，下次再发送这个消息时便可以直接到缓存中读取，可提高效率。

   OC为什么要使用消息机制呢？因为通过消息及消息转发机制可以调用当前类中不存在的方法，很灵活，变相实现了多继承。




   要想了解消息机制，首先要清楚OC的运行时机制，可参考官方文档Objective-C Runtime Programming Guide。OC的Runtime目前有两个版本，OC2.0之前用的是Legacy版本，之后用的是Modern版本，新版本自然比旧版本功能更强大。主要了解Modern版本的机制即可。
   OC编程时，和Runtime交互主要有三方面：第一是编译项目的时候，Runtime会自动把OC代码转换成对应的数据结构和方法调用，如将消息机制转成普通的方法调用。这是在后台自动运行的，不需要人工干预。第二是可以通过NSObject的一些类方法，来获取当前实例的基本信息，如属于哪个类，是否有某个方法，是否遵守了某个协议等等。第三还有一些Runtime方法，不过一般在开发OC和其他语言交互层的时候调用，或者调试底层代码时调用。一般不建议在普通的OC项目中直接调用这些方法。


2、C语言中void (*fnc)();是什么意思？
   指向一个函数的指针。

3、Objective-C中SEL和@selector分别表示什么？
   SEL是OC的基本数据类型，用来存储selector数据。@selector是一个方法，可以获取某方法的selector。那么selector到底又是什么东西呢？可以理解为方法的编号，也许是函数地址，总之通过这个selector，运行时可以找到这个方法。

4、如果类A和类B没有继承关系，则在A.h文件中无需写#import "B.h"，只需写@class B；因为前者会把B的所有详细信息都引入，从而使编译的时间很长，而此处只需要告诉编译器类B是存在的就可以了，即后者实现的效果。在A.m中再使用#import "B.h"，因为这里要调用类B，需要B的详细信息。
   但如果B是A的父类，则必须写#import "B.h"。
   另外如果A要遵守协议C，则还要写#import "C.h"